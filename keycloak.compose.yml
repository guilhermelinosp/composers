services:
  keycloak-postgres:
    image: postgres:16-alpine
    container_name: keycloak-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-keycloak}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-keycloak}
      - POSTGRES_DB=keycloak
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - keycloak
    volumes:
      - keycloak-postgres:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-keycloak}"]
      interval: 30s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    restart: unless-stopped
    environment:
      - DB_VENDOR=postgres
      - DB_ADDR=keycloak-postgres
      - DB_DATABASE=keycloak
      - DB_USER=${POSTGRES_USER:-keycloak}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-keycloak}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN:-keycloak}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD:-3y6kdy6A0a1HMr}
      - JAVA_OPTS=-Xms512m -Xmx1g
    ports:
      - "8080:8080"
    networks:
      - keycloak
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    command: ["start-dev"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

networks:
  keycloak:
    driver: bridge

volumes:
  keycloak-postgres:
