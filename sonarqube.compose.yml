services:
  sonarqube_postgres:
    image: docker.io/library/postgres:16.4-alpine
    container_name: sonarqube_postgres
    environment:
      - POSTGRES_USER=sonarqube
      - POSTGRES_PASSWORD=sonarqube
      - POSTGRES_DB=sonarqube
    volumes:
      - sonarqube_postgres:/var/lib/postgresql/data
    networks:
      - sonarqube_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonarqube"]
      interval: 30s
      timeout: 10s
      retries: 5

  sonarqube:
    image: docker.io/library/sonarqube:lts-community
    container_name: sonarqube
    depends_on:
      sonarqube_postgres:
        condition: service_healthy
    environment:
      - SONAR_JDBC_USERNAME=sonarqube
      - SONAR_JDBC_PASSWORD=sonarqube
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqube_postgres:5432/sonarqube
    ports:
      - "19001:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - sonarqube_network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO- http://localhost:9000/api/system/status | grep -q UP",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  sonarqube_network:

volumes:
  sonarqube_postgres:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
